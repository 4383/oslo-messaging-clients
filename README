A simple RPC client and server, built around the oslo.messaging
library from Openstack.  An academic exercise simply to gain an
understanding of the oslo.messenger API!

For more info on Openstack and oslo.messaging, see:

  http://www.openstack.org/

Not officially part of the olso.messenger project, just my own sandbox
to play in.

RUNNING
-------

1) run a local instance of qpidd:
$ qpidd --auth no

2) set up python environment.  I do this by running "tox" in a
oslo.messaging repo, then activating the python environment set up by
tox:

$ source /home/kgiusti/work/openstack/oslo/messaging/.tox/py27/bin/activate

3) run a server (best to do this in its own dedicated terminal as it blocks):

$ ./my-server.py Server01
Running server, name=Server01 exchange=my-exchange topic=my-topic namespace=my-namespace

4) run the client, invoking "methodA" on topic "my-topic" with
arguments "arg1" and "arg2":

$ ./my-client.py my-topic methodA arg1 arg2
Calling server on topic my-topic, server=None exchange=my-exchange namespace=my-namespace fanout=None

See the source for the server (my-server.py) for the RPC methods it supports.


TBD
---

o) eventlet testing (?)
o) resource-balancing a subscription across multiple Messenger threads
o) Lockup on failure of Messenger thread
o) Failover/reconnect routers

EXTERNAL ISSUES
---------------

dispatch: load balance across all servers servicing a given topic.
messenger: how to cancel subscriptions?
messenger: how to abort sent messages after a timeout?
messenger, qpidd: how to create queues/topics on demand?


